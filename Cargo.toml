[package]
name = "up-rs"
version = "0.4.1"
authors = ["Gibson Fahnestock <gibfahn@gmail.com>"]
edition = '2018'
license = "MIT OR Apache-2.0"
description = """
up-rs is a tool to help you keep your machine up to date.
"""
documentation = "https://github.com/gibfahn/up-rs"
homepage = "https://github.com/gibfahn/up-rs"
repository = "https://github.com/gibfahn/up-rs"
readme = "README.md"
keywords = ["cli", "tool"]
categories = ["command-line-utilities", "config"]
exclude = ["tests/"]

[[bin]]
name = "up"
path = "src/main.rs"

[dependencies]
walkdir = "2.3.1"
shellexpand = "2.0.0"
structopt = "0.3.14"
serde = "1.0.106"
serde_derive = "1.0.106"
envy = "0.4.1"
toml = "0.5.6"
serde_json = "1.0.52"
serde_yaml = "0.8.11"
log = "0.4.8"
anyhow = "1.0.28"
thiserror = "1.0.16"
chrono = "0.4.11"
git2 = { version = "0.13.5", features = ["vendored-openssl"] }
dirs = "2.0.2"
slog = "2.5.2"
slog-stdlog = "4.0.0"
slog-term = "2.5.0"
slog-scope = "4.3.0"
slog-async = "2.5.0"
displaydoc = "0.1.5"

[dev-dependencies]
# TODO(gib): Have to comment this out to re-run cargo-raze.
testutils = { path = "./testutils" }
ignore = "0.4.14"

[features]
CI = [] # Enabled when running in CI.

# cargo-raze config: https://github.com/google/cargo-raze
[raze]
# Don't vendor deps.
genmode = "Remote"
# The WORKSPACE relative path to the Cargo.toml working directory.
workspace_path = "//cargo"
output_buildfile_suffix = "BUILD.bazel"
# The target to generate BUILD rules for.
# target = "x86_64-unknown-linux-musl"
target = "x86_64-apple-darwin"

[raze.crates.log.'0.4.8']
# build.rs output doesn't get passed into cargo flags.
# gen_buildrs = true
additional_flags = [
  "--cfg=atomic_cas",
]

[raze.crates.syn.'1.0.18']
# gen_buildrs = true
additional_flags = [
  "--cfg=syn_disable_nightly_tests",
]

[raze.crates.proc-macro2.'1.0.10']
additional_flags = [
  "--cfg=u128",
  "--cfg=use_proc_macro",
  "--cfg=wrap_proc_macro",
]

[raze.crates.proc-macro-error.'1.0.2']
additional_flags = [
  "--cfg=use_fallback",
]

[raze.crates.openssl-sys.'0.9.55']
# gen_buildrs = true # 

# See: https://github.com/google/cargo-raze/issues/41#issuecomment-439166782
# git clone https://github.com/sfackler/rust-openssl && cd rust-openssl
# cd openssl-sys
# cargo build --features vendored -vv
#
# Copy the --cfg flags from the "Running" line (second-last), mine looked like:
#
# Running
# `CARGO=... ... rustc ...
#     --cfg 'feature="openssl-src"'
#     --cfg 'feature="vendored"' -C metadata=f4265e53d5907a21 -C extra-filename=-f4265e53d5907a21
#     ...
#     --cfg const_fn
#     --cfg 'osslconf="OPENSSL_NO_COMP"'
#     --cfg 'osslconf="OPENSSL_NO_ENGINE"'
#     --cfg 'osslconf="OPENSSL_NO_SSL3_METHOD"'
#     --cfg ossl101
#     --cfg ossl102
#     --cfg ossl102f
#     --cfg ossl102h
#     --cfg ossl110
#     --cfg ossl110f
#     --cfg ossl110g
#     --cfg ossl110h
#     --cfg ossl111
#     --cfg ossl111b
#     --cfg ossl111c -l static=ssl -l static=crypto`
# Need to use \" instead of " as the generated build-file uses "" wrapping.
additional_flags = [
  "--cfg=const_fn",
  '--cfg=osslconf=\"OPENSSL_NO_COMP\"',
  '--cfg=osslconf=\"OPENSSL_NO_ENGINE\"',
  '--cfg=osslconf=\"OPENSSL_NO_SSL3_METHOD\"',
  "--cfg=ossl101",
  "--cfg=ossl102",
  "--cfg=ossl102f",
  "--cfg=ossl102h",
  "--cfg=ossl110",
  "--cfg=ossl110f",
  "--cfg=ossl110g",
  "--cfg=ossl110h",
  "--cfg=ossl111",
  "--cfg=ossl111b",
  "--cfg=ossl111c",

]

[raze.crates.libc.'0.2.69']
additional_flags = [
  "--cfg=libc_priv_mod_use",
  "--cfg=libc_union",
  "--cfg=libc_const_size_of",
  "--cfg=libc_align",
  "--cfg=libc_core_cvoid",
  "--cfg=libc_packedN",
]

# rustc-link-lib -> -l
# rustc-link-search -> -L

# https://github.com/project-oak/oak/pull/926/files
[raze.crates.libgit2-sys.'0.12.5+1.0.0']
gen_buildrs = true # Anything with a sys needs a build.rs.
data_attr = "glob([\"**/*\"])"
buildrs_additional_environment_variables = [
  "CARGO_CFG_TARGET_POINTER_WIDTH=64",
  "OPT_LEVEL=0", # 3 for debug.
  "HOST=any",
]
additional_flags = [
  "-L libgit2/include"
]

[raze.crates.libssh2-sys.'0.2.17']
gen_buildrs = true # Anything with a sys needs a build.rs.
data_attr = "glob([\"**/*\", \"libssh2/.git\"])"
buildrs_additional_environment_variables = [
  # "CARGO_CFG_TARGET_POINTER_WIDTH=64",
  "OPT_LEVEL=0", # 3 for debug.
  "HOST=any",
]
additional_flags = [
  "-L libssh2/include",
  "-L /usr/local/opt/openssl@1.1/include",
]

# libgit2/include/git2/sys/openssl.h

# /private/var/tmp/_bazel_gib/47e6d68a88cd1ba9bf9e6c87c62a0714/execroot/up_rs/bazel-out/darwin-fastbuild-ST-5e74b77704d3a70b08875590eb0f067cbb9a6e09f41f090f307cf0d79d4b2461/bin/external/raze__libgit2_sys__0_12_5_1_0_0/libgit2_sys_out_dir_outputs/include/git2/sys/openssl.h
# 
# /private/var/tmp/_bazel_gib/47e6d68a88cd1ba9bf9e6c87c62a0714/execroot/up_rs/bazel-out/darwin-fastbuild-ST-5e74b77704d3a70b08875590eb0f067cbb9a6e09f41f090f307cf0d79d4b2461/bin/external/raze__libgit2_sys__0_12_5_1_0_0/libgit2_sys_out_dir_outputs/include/git2/sys/openssl.h

# additional_flags = [
#   "-l static=git2",
#   "-L native=/Users/gib/code/utils/git2-rs/target/debug/build/libgit2-sys-6315db888fc1ba1c/out/build",
#   "-l iconv",
#   "-l framework=Security",
#   "-l framework=CoreFoundation",
# ]
